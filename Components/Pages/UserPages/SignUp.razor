@page "/user/signup"
@using FinalProject.Models
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager Navigation
@inject UserService UserService

<PageTitle>Sign Up</PageTitle>

<h1>Sign Up for Doggy Domain</h1>

<EditForm Model="newUser" OnValidSubmit="HandleSignUp">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="UserName">Username</label>
        <InputText class="form-control" id="UserName" @bind="newUser.UserName" required />
    </div>

    <div class="form-group">
        <label for="Email">Email</label>
        <InputEmail class="form-control" id="Email" @bind="newUser.Email" required />
    </div>

    <div class="form-group">
        <label for="FirstName">First Name</label>
        <InputText class="form-control" id="FirstName" @bind="newUser.FirstName" required />
    </div>

    <div class="form-group">
        <label for="LastName">Last Name</label>
        <InputText class="form-control" id="LastName" @bind="newUser.LastName" required />
    </div>

    <button type="submit" class="btn btn-primary">Sign Up</button>
</EditForm>

@if (signUpSuccess)
{
    <div class="alert alert-success mt-3">
        <strong>Success!</strong> You have signed up successfully.
    </div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">
        <strong>Error!</strong> @errorMessage
    </div>
}

@code {
    private User newUser = new User();
    private bool signUpSuccess = false;
    private string errorMessage;

    private async Task HandleSignUp()
    {
        try
        {
            bool result = await UserService.CreateUserAsync(newUser);

            if (result)
            {
                signUpSuccess = true;
                errorMessage = null;
                Navigation.NavigateTo("/user/login");  // Correctly navigate to the login page
            }
            else
            {
                signUpSuccess = false;
                errorMessage = "There was an issue signing up. Please try again.";
            }
        }
        catch (Exception ex)
        {
            signUpSuccess = false;
            errorMessage = $"Error: {ex.Message}";
        }
    }
}
